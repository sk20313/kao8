<!DOCTYPE html>
<html lang="zh-TW">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>È∫ªË°£Áõ∏Ê≥ï‰∏âÂ∫≠ÂàÜÊûêÂ∑•ÂÖ∑ - ÊâãÂä®Ê†áËÆ∞Áâà</title>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', 'Microsoft JhengHei', sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #1a2a6c, #b21f1f, #1a2a6c);
            color: white;
            min-height: 100vh;
            padding: 20px;
            background-attachment: fixed;
        }
        
        .container {
            max-width: 1000px;
            margin: 0 auto;
            background: rgba(0, 0, 30, 0.85);
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
            overflow: hidden;
            border: 1px solid #4f8bf9;
        }
        
        header {
            background: rgba(0, 20, 60, 0.9);
            padding: 25px;
            text-align: center;
            border-bottom: 3px solid #4f8bf9;
            position: relative;
        }
        
        h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            color: #4f8bf9;
            text-shadow: 0 2px 4px rgba(0,0,0,0.5);
        }
        
        .subtitle {
            font-size: 1.2rem;
            opacity: 0.9;
            max-width: 600px;
            margin: 0 auto;
        }
        
        .main-content {
            display: flex;
            flex-wrap: wrap;
            padding: 20px;
        }
        
        .upload-section {
            flex: 1;
            min-width: 300px;
            padding: 20px;
            background: rgba(10, 25, 60, 0.7);
            border-radius: 15px;
            margin: 10px;
        }
        
        .result-section {
            flex: 1;
            min-width: 300px;
            padding: 20px;
            background: rgba(10, 25, 60, 0.7);
            border-radius: 15px;
            margin: 10px;
        }
        
        h2 {
            color: #4f8bf9;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 2px solid #4f8bf9;
        }
        
        .upload-area {
            border: 3px dashed #4f8bf9;
            border-radius: 15px;
            padding: 30px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s;
            margin-bottom: 20px;
            background: rgba(20, 40, 80, 0.4);
        }
        
        .upload-area:hover {
            background: rgba(30, 60, 120, 0.5);
            transform: translateY(-3px);
        }
        
        .upload-icon {
            font-size: 4rem;
            margin-bottom: 15px;
            color: #4f8bf9;
        }
        
        .btn {
            background: linear-gradient(to right, #4f8bf9, #6a5af9);
            color: white;
            border: none;
            padding: 14px 28px;
            font-size: 1.1rem;
            border-radius: 50px;
            cursor: pointer;
            transition: all 0.3s;
            display: block;
            width: 100%;
            margin: 20px 0;
            font-weight: bold;
            letter-spacing: 1px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.3);
        }
        
        .btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(0,0,0,0.4);
        }
        
        .btn:active {
            transform: translateY(1px);
        }
        
        .btn:disabled {
            background: #555;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }
        
        #imagePreview {
            max-width: 100%;
            max-height: 500px;
            border-radius: 10px;
            background: #0a1429;
            margin-top: 15px;
            display: none;
            border: 2px solid #4f8bf9;
        }
        
        .result-box {
            background: rgba(20, 40, 80, 0.4);
            border-radius: 15px;
            padding: 20px;
            margin-top: 20px;
            border: 2px solid #4f8bf9;
        }
        
        .result-item {
            display: flex;
            justify-content: space-between;
            padding: 12px 0;
            border-bottom: 1px solid rgba(79, 139, 249, 0.3);
        }
        
        .result-item:last-child {
            border-bottom: none;
        }
        
        .progress-container {
            height: 20px;
            background: rgba(0, 0, 0, 0.3);
            border-radius: 10px;
            margin: 10px 0 20px;
            overflow: hidden;
        }
        
        .progress-bar {
            height: 100%;
            background: linear-gradient(to right, #4f8bf9, #6a5af9);
            border-radius: 10px;
            width: 0%;
            transition: width 1s ease-in-out;
        }
        
        .loading {
            text-align: center;
            padding: 30px;
            display: none;
        }
        
        .spinner {
            border: 5px solid rgba(79, 139, 249, 0.3);
            border-top: 5px solid #4f8bf9;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            animation: spin 1s linear infinite;
            margin: 0 auto 20px;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        footer {
            text-align: center;
            padding: 20px;
            background: rgba(0, 20, 60, 0.9);
            margin-top: 20px;
            border-top: 1px solid #4f8bf9;
        }
        
        .note {
            font-size: 0.9rem;
            opacity: 0.7;
            margin-top: 5px;
        }
        
        .marker-instructions {
            background: rgba(20, 40, 80, 0.4);
            border-radius: 10px;
            padding: 15px;
            margin: 15px 0;
            border-left: 4px solid #4f8bf9;
        }
        
        .marker-instructions ol {
            padding-left: 20px;
            margin: 10px 0;
        }
        
        .marker-instructions li {
            margin-bottom: 8px;
        }
        
        .point-marker {
            position: absolute;
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background: red;
            transform: translate(-50%, -50%);
            z-index: 10;
        }
        
        .point-label {
            position: absolute;
            background: rgba(0, 0, 0, 0.7);
            color: white;
            padding: 2px 6px;
            border-radius: 4px;
            font-size: 12px;
            transform: translate(10px, -10px);
            z-index: 10;
        }
        
        .image-container {
            position: relative;
            display: inline-block;
            margin: 10px 0;
        }
        
        @media (max-width: 768px) {
            .main-content {
                flex-direction: column;
            }
            
            h1 {
                font-size: 2rem;
            }
        }
        
        .interpretation {
            margin-top: 20px;
            padding: 15px;
            background: rgba(20, 40, 80, 0.4);
            border-radius: 10px;
            border-left: 4px solid #4f8bf9;
        }
        
        .interpretation h3 {
            color: #4f8bf9;
            margin-bottom: 10px;
        }
        
        .interpretation p {
            margin-bottom: 10px;
        }
        
        .sample-images {
            display: flex;
            justify-content: space-around;
            flex-wrap: wrap;
            margin-top: 20px;
            gap: 15px;
        }
        
        .sample-image {
            width: 120px;
            height: 120px;
            border-radius: 10px;
            cursor: pointer;
            border: 2px solid #4f8bf9;
            object-fit: cover;
            transition: all 0.3s;
        }
        
        .sample-image:hover {
            transform: scale(1.05);
            box-shadow: 0 5px 15px rgba(0,0,0,0.3);
        }
        
        .sample-container {
            text-align: center;
            margin-top: 20px;
        }
        
        .decoration {
            position: absolute;
            top: 20px;
            right: 20px;
            font-size: 2.5rem;
            opacity: 0.5;
        }
        
        .tutorial-section {
            background: rgba(20, 40, 80, 0.6);
            border-radius: 15px;
            padding: 20px;
            margin: 20px 0;
            border: 2px solid #4f8bf9;
        }
        
        .tutorial-section h2 {
            color: #4f8bf9;
            border-bottom: 2px solid #4f8bf9;
            padding-bottom: 10px;
            margin-bottom: 15px;
        }
        
        .tutorial-step {
            margin-bottom: 20px;
            padding-left: 20px;
            border-left: 3px solid #4f8bf9;
        }
        
        .tutorial-step h3 {
            color: #4f8bf9;
            margin-bottom: 10px;
        }
        
        .github-logo {
            width: 100px;
            margin: 10px auto;
            display: block;
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>È∫ªË°£Áõ∏Ê≥ï‰∏âÂ∫≠ÂàÜÊûêÂ∑•ÂÖ∑</h1>
            <p class="subtitle">ÊâãÂä®Ê†áËÆ∞ÁÇπÁâàÊú¨ - ÁÆÄÂçïÂèØÈù†ÔºåÊó†ÈúÄÂ§çÊùÇÊäÄÊúØ</p>
            <div class="decoration">‚òØ</div>
        </header>
        
        <div class="main-content">
            <div class="upload-section">
                <h2>‰∏ä‰º†ÁÖßÁâá</h2>
                <div class="upload-area" id="uploadArea">
                    <div class="upload-icon">üì∑</div>
                    <p>ÁÇπÂáªÊàñÊãñÊîæÈù¢ÈÉ®ÁÖßÁâáÂà∞ËøôÈáå</p>
                    <p class="note">(Ê≠£Èù¢Ê∏ÖÊô∞ÁÖßÁâáÊïàÊûúÊúÄ‰Ω≥)</p>
                    <input type="file" id="fileInput" accept="image/*" style="display:none;">
                </div>
                
                <div class="marker-instructions">
                    <p><strong>Ê†áËÆ∞Ê≠•È™§Ôºö</strong></p>
                    <ol>
                        <li>ÁÇπÂáª<strong>ÂèëÈôÖÁ∫ø‰∏≠ÁÇπ</strong>ÔºàÈ¢ùÂ§¥È°∂ÈÉ®‰∏≠Â§ÆÔºâ</li>
                        <li>ÁÇπÂáª<strong>ÁúâÂøÉ‰ΩçÁΩÆ</strong>Ôºà‰∏§Áúâ‰πãÈó¥Ôºâ</li>
                        <li>ÁÇπÂáª<strong>Èºª‰∏ãÁÇπ</strong>ÔºàÈºªÂ≠î‰∏ãÊñπÔºâ</li>
                        <li>ÁÇπÂáª<strong>‰∏ãÂ∑¥Â∞ñ</strong>Ôºà‰∏ãÂ∑¥ÊúÄÂ∫ïÈÉ®Ôºâ</li>
                    </ol>
                    <p>Ê†áËÆ∞ÂÆåÊàêÂêéÁÇπÂáª"ËÆ°ÁÆóÊØî‰æã"ÊåâÈíÆ</p>
                </div>
                
                <button class="btn" id="calculateBtn" disabled>ËÆ°ÁÆóÊØî‰æã</button>
                <button class="btn" id="resetBtn">ÈáçÁΩÆÊ†áËÆ∞ÁÇπ</button>
                
                <div id="imageContainer" class="image-container">
                    <img id="imagePreview" alt="Èù¢ÈÉ®ÁÖßÁâáÈ¢ÑËßà">
                </div>
                
                <div class="sample-container">
                    <h3>Á§∫‰æãÂõæÁâá</h3>
                    <p class="note">ÁÇπÂáª‰∏ãÊñπÁ§∫‰æãÂõæÁâáÂø´ÈÄü‰ΩìÈ™åÂàÜÊûêÂäüËÉΩ</p>
                    <div class="sample-images">
                        <img src="https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?crop=entropy&cs=tinysrgb&fit=crop&fm=jpg&h=200&w=200" 
                             alt="Á§∫‰æã1" class="sample-image" id="sample1">
                        <img src="https://images.unsplash.com/photo-1494790108377-be9c29b29330?crop=entropy&cs=tinysrgb&fit=crop&fm=jpg&h=200&w=200" 
                             alt="Á§∫‰æã2" class="sample-image" id="sample2">
                        <img src="https://images.unsplash.com/photo-1519085360753-af0119f7cbe7?crop=entropy&cs=tinysrgb&fit=crop&fm=jpg&h=200&w=200" 
                             alt="Á§∫‰æã3" class="sample-image" id="sample3">
                    </div>
                </div>
            </div>
            
            <div class="result-section">
                <h2>ÂàÜÊûêÁªìÊûú</h2>
                <div class="result-box" id="resultBox" style="display:none;">
                    <div class="result-item">
                        <span>‰∏äÂ∫≠ÊØî‰æãÔºàÈ¢ùÂ§¥Ôºâ</span>
                        <span id="upperRatio">--%</span>
                    </div>
                    <div class="progress-container">
                        <div class="progress-bar" id="upperBar"></div>
                    </div>
                    
                    <div class="result-item">
                        <span>‰∏≠Â∫≠ÊØî‰æãÔºàÁúâÁúºÈºªÔºâ</span>
                        <span id="middleRatio">--%</span>
                    </div>
                    <div class="progress-container">
                        <div class="progress-bar" id="middleBar"></div>
                    </div>
                    
                    <div class="result-item">
                        <span>‰∏ãÂ∫≠ÊØî‰æãÔºàÂè£‰∏ãÂ∑¥Ôºâ</span>
                        <span id="lowerRatio">--%</span>
                    </div>
                    <div class="progress-container">
                        <div class="progress-bar" id="lowerBar"></div>
                    </div>
                    
                    <div class="result-item">
                        <span><strong>‰∏âÂ∫≠Â§±Ë°°Á≥ªÊï∞</strong></span>
                        <span id="imbalanceValue">--%</span>
                    </div>
                    <div class="result-item">
                        <span>ÈªÑÈáëÊØî‰æãÂÅèÂ∑Æ</span>
                        <span id="goldenDeviation">--%</span>
                    </div>
                    
                    <div class="interpretation" id="interpretation">
                        <h3>Èù¢Áõ∏Ëß£ËØª</h3>
                        <p>ËØ∑‰∏ä‰º†ÁÖßÁâáÂπ∂Ê†áËÆ∞ÁÇπÂêéÊü•ÁúãÈù¢Áõ∏Ëß£ËØª</p>
                    </div>
                </div>
                
                <div id="initialMessage">
                    <p>‰∏ä‰º†Èù¢ÈÉ®ÁÖßÁâáÂêéÔºåÊåâÁÖßÊåáÁ§∫Ê†áËÆ∞Âõõ‰∏™ÂÖ≥ÈîÆÁÇπ„ÄÇ</p>
                    <p class="note">Êú¨Â∑•ÂÖ∑ÂÆåÂÖ®Âú®ÊµèËßàÂô®‰∏≠ËøêË°åÔºå‰∏ç‰∏ä‰º†‰ªª‰ΩïÊï∞ÊçÆÂà∞ÊúçÂä°Âô®„ÄÇ</p>
                </div>
                
                <!-- GitHubÈÉ®ÁΩ≤ÊïôÁ®ã -->
                <div class="tutorial-section">
                    <h2>GitHubÈÉ®ÁΩ≤ÊïôÁ®ã</h2>
                    <img src="https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png" alt="GitHub Logo" class="github-logo">
                    
                    <div class="tutorial-step">
                        <h3>Ê≠•È™§1: ÂàõÂª∫GitHubË¥¶Êà∑</h3>
                        <p>ËÆøÈóÆ <a href="https://github.com/" target="_blank" style="color: #4f8bf9;">github.com</a> Ê≥®ÂÜåË¥¶Âè∑</p>
                    </div>
                    
                    <div class="tutorial-step">
                        <h3>Ê≠•È™§2: ÂàõÂª∫Êñ∞‰ªìÂ∫ì</h3>
                        <p>ÁÇπÂáªÂè≥‰∏äËßí"+" ‚Üí "New repository" ‚Üí ËæìÂÖ•‰ªìÂ∫ìÂêç ‚Üí ÁÇπÂáª"Create repository"</p>
                    </div>
                    
                    <div class="tutorial-step">
                        <h3>Ê≠•È™§3: ‰∏ä‰º†‰ª£Á†Å</h3>
                        <p>Âú®‰ªìÂ∫ìÈ°µÈù¢ÁÇπÂáª"Add file" ‚Üí "Upload files" ‚Üí ÊãñÊîæÊ≠§HTMLÊñá‰ª∂ ‚Üí ÁÇπÂáª"Commit changes"</p>
                    </div>
                    
                    <div class="tutorial-step">
                        <h3>Ê≠•È™§4: ÂêØÁî®GitHub Pages</h3>
                        <p>ËøõÂÖ•‰ªìÂ∫ìËÆæÁΩÆ ‚Üí Â∑¶‰æß"Pages" ‚Üí ÂàÜÊîØÈÄâÊã©"main" ‚Üí Êñá‰ª∂Â§πÈÄâÊã©"/ (root)" ‚Üí ÁÇπÂáª"Save"</p>
                    </div>
                    
                    <div class="tutorial-step">
                        <h3>Ê≠•È™§5: ËÆøÈóÆÁΩëÁ´ô</h3>
                        <p>Á≠âÂæÖÂá†ÂàÜÈíüÂêéÔºåËÆøÈóÆÔºö<code>https://[ÊÇ®ÁöÑÁî®Êà∑Âêç].github.io/[‰ªìÂ∫ìÂêç]</code></p>
                    </div>
                </div>
            </div>
        </div>
        
        <footer>
            <p>È∫ªË°£Áõ∏Ê≥ï‰∏âÂ∫≠ÂàÜÊûêÂ∑•ÂÖ∑ v1.2 | ÊâãÂä®Ê†áËÆ∞Áâà</p>
            <p class="note">Ê≥®ÊÑèÔºöÊú¨Â∑•ÂÖ∑‰ªÖ‰æõÂ®±‰πêÂèÇËÄÉÔºåÂÆûÈôÖÈù¢Áõ∏ÂàÜÊûêÈúÄ‰∏ì‰∏ö‰∫∫Â£´ËøõË°å</p>
        </footer>
    </div>

    <script>
        // È°µÈù¢ÂÖÉÁ¥†
        const fileInput = document.getElementById('fileInput');
        const uploadArea = document.getElementById('uploadArea');
        const imagePreview = document.getElementById('imagePreview');
        const imageContainer = document.getElementById('imageContainer');
        const calculateBtn = document.getElementById('calculateBtn');
        const resetBtn = document.getElementById('resetBtn');
        const resultBox = document.getElementById('resultBox');
        const initialMessage = document.getElementById('initialMessage');
        const interpretation = document.getElementById('interpretation');
        
        // ÁªìÊûúÂÖÉÁ¥†
        const upperRatio = document.getElementById('upperRatio');
        const middleRatio = document.getElementById('middleRatio');
        const lowerRatio = document.getElementById('lowerRatio');
        const imbalanceValue = document.getElementById('imbalanceValue');
        const goldenDeviation = document.getElementById('goldenDeviation');
        const upperBar = document.getElementById('upperBar');
        const middleBar = document.getElementById('middleBar');
        const lowerBar = document.getElementById('lowerBar');
        
        // Ê†áËÆ∞ÁÇπÊï∞ÁªÑ
        const points = [];
        let currentImage = null;
        let originalWidth = 0;
        let originalHeight = 0;
        
        // ‰∏ä‰º†Âå∫ÂüüÁÇπÂáª‰∫ã‰ª∂
        uploadArea.addEventListener('click', () => {
            fileInput.click();
        });
        
        // ÊãñÊîæÂäüËÉΩ
        uploadArea.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadArea.style.background = 'rgba(50, 100, 180, 0.6)';
        });
        
        uploadArea.addEventListener('dragleave', () => {
            uploadArea.style.background = 'rgba(20, 40, 80, 0.4)';
        });
        
        uploadArea.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadArea.style.background = 'rgba(20, 40, 80, 0.4)';
            
            if (e.dataTransfer.files && e.dataTransfer.files[0]) {
                fileInput.files = e.dataTransfer.files;
                handleFileSelect();
            }
        });
        
        // Êñá‰ª∂ÈÄâÊã©‰∫ã‰ª∂
        fileInput.addEventListener('change', handleFileSelect);
        
        function handleFileSelect() {
            if (fileInput.files && fileInput.files[0]) {
                const file = fileInput.files[0];
                
                // Ê£ÄÊü•Êñá‰ª∂Á±ªÂûã
                if (!file.type.match('image.*')) {
                    alert('ËØ∑‰∏ä‰º†ÂõæÁâáÊñá‰ª∂');
                    return;
                }
                
                const reader = new FileReader();
                
                reader.onload = function(event) {
                    const img = new Image();
                    img.onload = function() {
                        // Ê∏ÖÈô§‰πãÂâçÁöÑÊ†áËÆ∞ÁÇπ
                        clearMarkers();
                        
                        // ÊòæÁ§∫ÂõæÁâá
                        imagePreview.src = event.target.result;
                        imagePreview.style.display = 'block';
                        
                        // ‰øùÂ≠òÂéüÂßãÂ∞∫ÂØ∏
                        originalWidth = img.width;
                        originalHeight = img.height;
                        
                        // Ë∞ÉÊï¥È¢ÑËßàÂ§ßÂ∞è
                        const maxWidth = 600;
                        if (img.width > maxWidth) {
                            const scale = maxWidth / img.width;
                            imagePreview.width = maxWidth;
                            imagePreview.height = img.height * scale;
                        }
                        
                        currentImage = img;
                        calculateBtn.disabled = false;
                    };
                    img.src = event.target.result;
                };
                
                reader.readAsDataURL(file);
            }
        }
        
        // ÁÇπÂáªÂõæÁâáÊ∑ªÂä†Ê†áËÆ∞ÁÇπ
        imagePreview.addEventListener('click', (e) => {
            if (!currentImage) return;
            
            // Ëé∑ÂèñÁÇπÂáªÂùêÊ†á
            const rect = imagePreview.getBoundingClientRect();
            const x = e.clientX - rect.left;
            const y = e.clientY - rect.top;
            
            // ÊúÄÂ§öÂè™ËÉΩÊ†áËÆ∞4‰∏™ÁÇπ
            if (points.length >= 4) {
                alert('Â∑≤ÁªèÊ†áËÆ∞‰∫Ü4‰∏™ÂÖ≥ÈîÆÁÇπÔºåËØ∑ÁÇπÂáª"ÈáçÁΩÆÊ†áËÆ∞ÁÇπ"ÈáçÊñ∞Ê†áËÆ∞');
                return;
            }
            
            // Ê∑ªÂä†Ê†áËÆ∞ÁÇπ
            const pointIndex = points.length;
            createMarker(x, y, pointIndex);
            
            // ‰øùÂ≠òÂùêÊ†á
            points.push({
                x: (x / imagePreview.width) * originalWidth,
                y: (y / imagePreview.height) * originalHeight
            });
            
            // Â¶ÇÊûúÊúâ4‰∏™ÁÇπÔºåÂèØ‰ª•ËÆ°ÁÆóÊØî‰æã
            if (points.length === 4) {
                calculateBtn.disabled = false;
            }
        });
        
        // ÂàõÂª∫Ê†áËÆ∞ÁÇπ
        function createMarker(x, y, index) {
            const labels = ['ÂèëÈôÖÁ∫ø', 'ÁúâÂøÉ', 'Èºª‰∏ãÁÇπ', '‰∏ãÂ∑¥'];
            
            // ÂàõÂª∫Ê†áËÆ∞ÁÇπ
            const marker = document.createElement('div');
            marker.className = 'point-marker';
            marker.style.left = `${x}px`;
            marker.style.top = `${y}px`;
            
            // ÂàõÂª∫Ê†áÁ≠æ
            const label = document.createElement('div');
            label.className = 'point-label';
            label.textContent = `${index+1}. ${labels[index]}`;
            label.style.left = `${x}px`;
            label.style.top = `${y}px`;
            
            imageContainer.appendChild(marker);
            imageContainer.appendChild(label);
        }
        
        // Ê∏ÖÈô§ÊâÄÊúâÊ†áËÆ∞ÁÇπ
        function clearMarkers() {
            // Ê∏ÖÈô§ÊâÄÊúâÊ†áËÆ∞
            const markers = document.querySelectorAll('.point-marker, .point-label');
            markers.forEach(marker => marker.remove());
            
            // Ê∏ÖÁ©∫ÂùêÊ†áÊï∞ÁªÑ
            points.length = 0;
        }
        
        // ÈáçÁΩÆÊ†áËÆ∞ÁÇπ
        resetBtn.addEventListener('click', () => {
            clearMarkers();
            calculateBtn.disabled = true;
        });
        
        // ËÆ°ÁÆóÊØî‰æã
        calculateBtn.addEventListener('click', () => {
            if (points.length !== 4) {
                alert('ËØ∑Ê†áËÆ∞4‰∏™ÂÖ≥ÈîÆÁÇπ');
                return;
            }
            
            // ËÆ°ÁÆó‰∏âÂ∫≠ÈïøÂ∫¶
            const upper = points[1].y - points[0].y;
            const middle = points[2].y - points[1].y;
            const lower = points[3].y - points[2].y;
            const total = upper + middle + lower;
            
            // ËÆ°ÁÆóÊØî‰æã
            const pct_upper = Math.round(upper / total * 100);
            const pct_middle = Math.round(middle / total * 100);
            const pct_lower = Math.round(lower / total * 100);
            
            // ËÆ°ÁÆóÂ§±Ë°°Á≥ªÊï∞
            const imbalance = Math.round(
                (Math.max(upper, middle, lower) - Math.min(upper, middle, lower)) / 
                Math.max(upper, middle, lower) * 100
            );
            
            // ÈªÑÈáëÊØî‰æãÂÅèÂ∑ÆÔºàÁêÜÊÉ≥ÊØî‰æã33.3%Ôºâ
            const goldenDev = Math.round(
                (Math.abs(pct_upper - 33.3) + 
                 Math.abs(pct_middle - 33.3) + 
                 Math.abs(pct_lower - 33.3)) / 3
            );
            
            // Êõ¥Êñ∞UIÊòæÁ§∫ÁªìÊûú
            upperRatio.textContent = `${pct_upper}%`;
            middleRatio.textContent = `${pct_middle}%`;
            lowerRatio.textContent = `${pct_lower}%`;
            imbalanceValue.textContent = `${imbalance}%`;
            goldenDeviation.textContent = `${goldenDev}%`;
            
            // ËøõÂ∫¶Êù°Âä®Áîª
            setTimeout(() => {
                upperBar.style.width = `${pct_upper}%`;
                middleBar.style.width = `${pct_middle}%`;
                lowerBar.style.width = `${pct_lower}%`;
            }, 500);
            
            // ÊòæÁ§∫ÁªìÊûú
            resultBox.style.display = 'block';
            initialMessage.style.display = 'none';
            
            // Êõ¥Êñ∞Èù¢Áõ∏Ëß£ËØª
            updateInterpretation(pct_upper, pct_middle, pct_lower);
        });
        
        // Êõ¥Êñ∞Èù¢Áõ∏Ëß£ËØª
        function updateInterpretation(upper, middle, lower) {
            let interpretationHTML = '<h3>Èù¢Áõ∏Ëß£ËØª</h3>';
            
            // ‰∏äÂ∫≠ÂàÜÊûê
            if (upper > 37) {
                interpretationHTML += '<p><strong>‰∏äÂ∫≠ÔºàÈ¢ùÂ§¥ÔºâËæÉÈïøÔºö</strong> Ë°®Á§∫ÊÇ®ÊúâËæÉÂº∫ÁöÑÊô∫ÂäõÂèëÂ±ïÂíåÊó©Âπ¥ËøêÂäø„ÄÇÈ¢ùÂ§¥ÂÆΩÂπøË±°ÂæÅÊÄùÁª¥ÂºÄÈòîÔºåÂñÑ‰∫éËßÑÂàíÔºåÊó©Âπ¥ÁîüÊ¥ªÂèØËÉΩËæÉ‰∏∫È°∫Âà©„ÄÇ</p>';
            } else if (upper < 30) {
                interpretationHTML += '<p><strong>‰∏äÂ∫≠ÔºàÈ¢ùÂ§¥ÔºâËæÉÁü≠Ôºö</strong> ‰ª£Ë°®Êó©Âπ¥ÂèëÂ±ïÂèØËÉΩËæÉ‰∏∫ËæõËã¶ÔºåÈúÄÊõ¥Â§öÂä™Âäõ„ÄÇ‰ΩÜ‰∏≠ÊôöÂπ¥ËøêÂäøÂèØËÉΩËæÉÂ•ΩÔºåÂ±û‰∫éÂ§ßÂô®ÊôöÊàêÁöÑÁ±ªÂûã„ÄÇ</p>';
            } else {
                interpretationHTML += '<p><strong>‰∏äÂ∫≠ÊØî‰æãÂùáË°°Ôºö</strong> Ë±°ÂæÅÊó©Âπ¥ËøêÂäøÂπ≥Á®≥ÔºåÊô∫ÂäõÂèëÂ±ïÊ≠£Â∏∏ÔºåÊúâËâØÂ•ΩÁöÑÂ≠¶‰π†ËÉΩÂäõÂíåÊÄùÁª¥ÈÄªËæë„ÄÇ</p>';
            }
            
            // ‰∏≠Â∫≠ÂàÜÊûê
            if (middle > 37) {
                interpretationHTML += '<p><strong>‰∏≠Â∫≠ÔºàÁúâÁúºÈºªÔºâËæÉÈïøÔºö</strong> ‰ª£Ë°®ÊÇ®ÊúâÂº∫ÁÉàÁöÑ‰∫ã‰∏öÂøÉÂíåË¥£‰ªªÊÑü„ÄÇ‰∏≠Âπ¥Êó∂ÊúüÊòØÊÇ®ÁöÑ‰∫∫ÁîüÈªÑÈáëÊúüÔºåÂèØËÉΩÂú®‰∫ã‰∏ö‰∏äÊúâÁ™ÅÂá∫Ë°®Áé∞„ÄÇ</p>';
            } else if (middle < 30) {
                interpretationHTML += '<p><strong>‰∏≠Â∫≠ÔºàÁúâÁúºÈºªÔºâËæÉÁü≠Ôºö</strong> Ë±°ÂæÅ‰∏≠Âπ¥ËøêÂäøÁõ∏ÂØπÂπ≥Á®≥ÔºåÂèØËÉΩÊõ¥Ê≥®ÈáçÂÆ∂Â∫≠ÂíåÁîüÊ¥ªÂπ≥Ë°°ÔºåËÄåÈùû‰∫ã‰∏öÊàêÂ∞±„ÄÇ</p>';
            } else {
                interpretationHTML += '<p><strong>‰∏≠Â∫≠ÊØî‰æãÂùáË°°Ôºö</strong> ‰ª£Ë°®‰∏≠Âπ¥ËøêÂäøÁ®≥ÂÆöÔºå‰∫ã‰∏öÂíåÁîüÊ¥ªËÉΩÂ§üÂπ≥Ë°°ÂèëÂ±ïÔºå‰∫∫ÈôÖÂÖ≥Á≥ªËâØÂ•Ω„ÄÇ</p>';
            }
            
            // ‰∏ãÂ∫≠ÂàÜÊûê
            if (lower > 37) {
                interpretationHTML += '<p><strong>‰∏ãÂ∫≠ÔºàÂè£‰∏ãÂ∑¥ÔºâËæÉÈïøÔºö</strong> Ë±°ÂæÅÊôöÂπ¥ËøêÂäøÂº∫ÁõõÔºåÊúâÊåÅ‰πÖÁöÑËÄêÂäõÂíåÊâßË°åÂäõ„ÄÇÊÇ®ÂèØËÉΩÊã•ÊúâÂùöÂº∫ÁöÑÊÑèÂøóÂíåÊåÅ‰πÖÁöÑËÄêÂäõ„ÄÇ</p>';
            } else if (lower < 30) {
                interpretationHTML += '<p><strong>‰∏ãÂ∫≠ÔºàÂè£‰∏ãÂ∑¥ÔºâËæÉÁü≠Ôºö</strong> ‰ª£Ë°®Ë°åÂä®ÂäõËæÉÂº∫‰ΩÜÊåÅ‰πÖÂäõÁ®çÂº±„ÄÇÊôöÂπ¥ÁîüÊ¥ªÂèØËÉΩËæÉ‰∏∫ÁÆÄÂçïÂπ≥Èùô„ÄÇ</p>';
            } else {
                interpretationHTML += '<p><strong>‰∏ãÂ∫≠ÊØî‰æãÂùáË°°Ôºö</strong> Ë±°ÂæÅÊôöÂπ¥ÁîüÊ¥ªÂπ≥Á®≥Ôºå‰∫∫ÈôÖÂÖ≥Á≥ªÂíåË∞êÔºåËÉΩÂ§ü‰∫´ÂèóÂ§©‰º¶‰πã‰πê„ÄÇ</p>';
            }
            
            // ÁªºÂêàËß£ËØª
            const deviation = Math.abs(upper - 33.3) + Math.abs(middle - 33.3) + Math.abs(lower - 33.3);
            if (deviation < 10) {
                interpretationHTML += '<p><strong>Êï¥‰ΩìÈù¢Áõ∏Ôºö</strong> ‰∏âÂ∫≠ÊØî‰æãÈùûÂ∏∏ÂùáË°°ÔºåË±°ÂæÅ‰∏ÄÁîüËøêÂäøÂπ≥Á®≥ÔºåÂêÑÊñπÈù¢ÂèëÂ±ïÂùáË°°ÔºåÊòØËæÉ‰∏∫ÁêÜÊÉ≥ÁöÑÈù¢Áõ∏Ê†ºÂ±Ä„ÄÇ</p>';
            } else if (deviation < 20) {
                interpretationHTML += '<p><strong>Êï¥‰ΩìÈù¢Áõ∏Ôºö</strong> ‰∏âÂ∫≠ÊØî‰æãËæÉ‰∏∫ÂùáË°°Ôºå‰∫∫ÁîüËôΩÊúâËµ∑‰ºè‰ΩÜÊï¥‰ΩìËøêÂäøÂπ≥Á®≥ÔºåËÉΩÂ§üÂú®‰∏çÂêåÈò∂ÊÆµÊúâÊâÄÊàêÂ∞±„ÄÇ</p>';
            } else {
                interpretationHTML += '<p><strong>Êï¥‰ΩìÈù¢Áõ∏Ôºö</strong> ‰∏âÂ∫≠ÊØî‰æãÊúâËæÉÊòéÊòæÂ∑ÆÂºÇÔºå‰∫∫ÁîüÂêÑÈò∂ÊÆµËøêÂäøËµ∑‰ºèËæÉÂ§ßÔºå‰ΩÜÂæÄÂæÄËÉΩÂú®ÁâπÂÆöÈ¢ÜÂüüÊúâÁ™ÅÂá∫Ë°®Áé∞„ÄÇ</p>';
            }
            
            interpretation.innerHTML = interpretationHTML;
        }
        
        // Á§∫‰æãÂõæÁâáÂä†ËΩΩ
        document.querySelectorAll('.sample-image').forEach(img => {
            img.addEventListener('click', function() {
                // ÂàõÂª∫Á§∫‰æãÂõæÁâá
                const imgElement = new Image();
                imgElement.crossOrigin = "Anonymous";
                imgElement.onload = function() {
                    // Ê∏ÖÈô§‰πãÂâçÁöÑÊ†áËÆ∞ÁÇπ
                    clearMarkers();
                    
                    // ÊòæÁ§∫ÂõæÁâá
                    imagePreview.src = this.src;
                    imagePreview.style.display = 'block';
                    
                    // ‰øùÂ≠òÂéüÂßãÂ∞∫ÂØ∏
                    originalWidth = imgElement.width;
                    originalHeight = imgElement.height;
                    
                    // Ë∞ÉÊï¥È¢ÑËßàÂ§ßÂ∞è
                    const maxWidth = 600;
                    if (imgElement.width > maxWidth) {
                        const scale = maxWidth / imgElement.width;
                        imagePreview.width = maxWidth;
                        imagePreview.height = imgElement.height * scale;
                    }
                    
                    currentImage = imgElement;
                    calculateBtn.disabled = false;
                    
                    // Ëá™Âä®Ê∑ªÂä†Ê†áËÆ∞ÁÇπÔºàÊ®°ÊãüÁî®Êà∑ÁÇπÂáªÔºâ
                    setTimeout(() => {
                        const rect = imagePreview.getBoundingClientRect();
                        
                        // Ê†πÊçÆÁ§∫‰æãÂõæÁâáÁâπÂæÅÊ∑ªÂä†Ê†áËÆ∞ÁÇπ
                        addSimulatedPoint(rect, 0.5, 0.15);  // ÂèëÈôÖÁ∫ø‰∏≠ÁÇπ
                        addSimulatedPoint(rect, 0.5, 0.35);  // ÁúâÂøÉ
                        addSimulatedPoint(rect, 0.5, 0.58);  // Èºª‰∏ãÁÇπ
                        addSimulatedPoint(rect, 0.5, 0.85);  // ‰∏ãÂ∑¥Â∞ñ
                        
                        calculateBtn.disabled = false;
                    }, 500);
                };
                imgElement.src = this.src;
            });
        });
        
        // Ê∑ªÂä†Ê®°ÊãüÊ†áËÆ∞ÁÇπ
        function addSimulatedPoint(rect, xPercent, yPercent) {
            const x = rect.width * xPercent;
            const y = rect.height * yPercent;
            
            createMarker(x, y, points.length);
            
            points.push({
                x: (x / imagePreview.width) * originalWidth,
                y: (y / imagePreview.height) * originalHeight
            });
        }
    </script>
</body>
</html>
